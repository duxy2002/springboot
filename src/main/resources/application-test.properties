# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------


# BANNER
# Banner file encoding.
banner.charset=UTF-8
# Banner file location.
banner.location=classpath:banner.txt


# \u56E0\u4E3A\u4F7F\u7528\u4E86spring-boot-ext-logback-access,\u6240\u4EE5\u4E0B\u9762\u7684\u8BBE\u5B9A\u90FD\u505A\u6CE8\u91CA\u3002\u5F00\u59CB
## Directory in which log files are created. Can be relative to the tomcat base dir or absolute.
#server.tomcat.accesslog.directory=tomcat-log
##Enable access log.
#server.tomcat.accesslog.enabled=true
## Format pattern for access logs.
## Please refer http://www.m-bsys.com/code/tomcat-accesslog
## %h: Remote host name (or IP address if enableLookups for the connector is false)
## %l: Remote logical username from identd (always returns '-')
## %t: Date and time, in Common Log Format
## %r: First line of the request (method and request URI)
## %s: HTTP status code of the response
## %b: Bytes sent, excluding HTTP headers, or '-' if zero
## %D: Time taken to process the request, in millis
## %{xxx}i: for incoming headers
## %S: User session ID
#server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %Dmillis "%{User-Agent}i" %S
## Log file name prefix.
#server.tomcat.accesslog.prefix=access_log
## Log file name suffix.
#server.tomcat.accesslog.suffix=.log
## Tomcat base directory. If not specified a temporary directory will be used.
#server.tomcat.basedir=/opt/springboot
#\u56E0\u4E3A\u4F7F\u7528\u4E86spring-boot-ext-logback-access,\u6240\u4EE5\u4E0B\u9762\u7684\u8BBE\u5B9A\u90FD\u505A\u6CE8\u91CA\u3002\u7ED3\u675F

#spring-boot-ext-logback-access\u8BBE\u5B9A \u5F00\u59CB
logback.access.config=classpath:logback-access.xml
#spring-boot-ext-logback-access\u8BBE\u5B9A \u7ED3\u675F


# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)

#\u00A0\u6570\u636E\u5E93\u8BBF\u95EE\u914D\u7F6E(Druid)  \u5F00\u59CB
#\u00A0\u4E3B\u6570\u636E\u6E90\uFF0C\u9ED8\u8BA4\u7684
# Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
spring.datasource.type= com.alibaba.druid.pool.DruidDataSource
# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# JDBC url of the database.
spring.datasource.url=jdbc:mysql://16.158.50.178:3306/cloud_wechat_print
spring.datasource.username=welomo
# Login password of the database.
spring.datasource.password=xy52gXW,qrTa

#\u00A0\u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
#\u00A0\u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.initialSize=5
# For instance default:8
spring.datasource.minIdle=8
# For instance default:100
spring.datasource.maxActive=100

#\u00A0\u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000

# \u68C0\u6D4BSQL
spring.datasource.validationQuery=SELECT 1
#\u00A0\u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000

#\u00A0\u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000

spring.datasource.testWhileIdle=true
# For instance `false`
spring.datasource.testOnBorrow=false
# For instance `false`
spring.datasource.testOnReturn=false

#\u00A0\u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
#\u00A0\u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters=stat,wall,log4j
#\u00A0\u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#\u00A0\u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
#spring.datasource.useGlobalDataSourceStat=true


## Do not stop if an error occurs while initializing the database.
#spring.datasource.continue-on-error=false
## Data (DML) script resource reference.
#spring.datasource.data=
## Populate the database using 'data.sql'.
#spring.datasource.initialize=true
## Enable JMX support (if provided by the underlying pool).
#spring.datasource.jmx-enabled=false
## JNDI location of the datasource. Class, url, username & password are ignored when set.
#spring.datasource.jndi-name=
## Name of the datasource.
#spring.datasource.name=testdb
## Platform to use in the schema resource (schema-${platform}.sql).
#spring.datasource.platform=all
## Schema (DDL) script resource reference.
#spring.datasource.schema=
## Statement separator in SQL initialization scripts.
#spring.datasource.separator=;
## SQL scripts encoding.
#spring.datasource.sql-script-encoding=

# MyBatis\u7684\u914D\u7F6E \u5F00\u59CB
#\u8BBE\u5B9Amapper\u6587\u4EF6\u7684\u8DEF\u5F84
mybatis.mapper-locations=classpath*:/mybatis/mapper/**/*.xml
#\u6307\u5B9Amybatis\u914D\u7F6E\u6587\u4EF6\u7684\u8DEF\u5F84
mybatis.config-location=classpath:/mybatis/sqlmap-config.xml
#\u68C0\u6D4Bmybatis\u914D\u7F6E\u6587\u4EF6\u662F\u5426\u5B58\u5728
mybatis.check-config-location=true
# MyBatis\u7684\u914D\u7F6E \u7ED3\u675F

#\u00A0\u6570\u636E\u5E93\u8BBF\u95EE\u914D\u7F6E(Druid)  \u7ED3\u675F



# OUTPUT
# Configure the ANSI output (can be "detect", "always", "never").
spring.output.ansi.enabled=detect
